

version: '3.3'
services:
  scala:
    build: application/writeside/target/docker/stage
    environment:
      GRAFANA_URL: http://grafana:3000
      KAFKA_URL: http://kafka:29092
      PROMETHEUS_URL: http://prometheus:9090
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - grafana

  zookeeper:
    container_name: zookeeper
    image:  confluentinc/cp-zookeeper:5.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: kafka
    image:  confluentinc/cp-enterprise-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1



  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:7.0.0-beta1
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      GF_RENDERING_SERVER_URL:  http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
  renderer:
    image: grafana/grafana-image-renderer:2.0.0-beta1
    depends_on:
      - grafana
    ports:
      - 8081:8081
    environment:
      ENABLE_METRICS: 'true'


  postgres:
    image: postgres
    restart: always
    network_mode: host
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5452:5452
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
